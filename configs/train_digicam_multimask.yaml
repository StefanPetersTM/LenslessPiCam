# python scripts/recon/train_learning_based.py -cn train_digicam_multimask
defaults:
  - train_unrolledADMM
  - _self_

torch_device: 'cuda:0'
device_ids: [0, 1, 2, 3]
eval_disp_idx: [1, 2, 4, 5, 9]

# Dataset
files:
  dataset: bezzam/DigiCam-Mirflickr-MultiMask-25K
  huggingface_dataset: True
  huggingface_psf: null
  downsample: 1
  # TODO: these parameters should be in the dataset?
  image_res: [900, 1200]  # used during measurement
  rotate: True   # if measurement is upside-down
  save_psf: True

  extra_eval: null
    # singlemask: 
    #   huggingface_repo: bezzam/DigiCam-Mirflickr-SingleMask-25K
    #   display_res: [900, 1200]  # used during measurement
    #   rotate: True   # if measurement is upside-down
    #   alignment:
    #     top_left: [80, 100]  # height, width
    #     height: 200

# TODO: these parameters should be in the dataset?
alignment:
  # when there is no downsampling
  top_left: [80, 100]  # height, width
  height: 200

training:
  batch_size: 4
  epoch: 25
  eval_batch_size: 4

reconstruction:
  method: unrolled_admm
  unrolled_admm:
    # Number of iterations
    n_iter: 5
    # Hyperparameters
    mu1: 1e-4
    mu2: 1e-4
    mu3: 1e-4
    tau: 2e-4
  pre_process: 
    network : UnetRes  # UnetRes or DruNet or null
    depth : 4 # depth of each up/downsampling layer. Ignore if network is DruNet
    nc: [32,64,116,128]
  post_process: 
    network : UnetRes  # UnetRes or DruNet or null
    depth : 4 # depth of each up/downsampling layer. Ignore if network is DruNet
    nc: [32,64,116,128]

simulation:
  use_waveprop: True
  deadspace: True
  scene2mask: 0.3
  mask2sensor: 0.002
